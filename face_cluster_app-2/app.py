
import streamlit as st
import json
from pathlib import Path
from core.cluster import build_plan

st.title("üì∏ –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –ª–∏—Ü (InsightFace + DBSCAN)")

photos_dir = st.text_input("–ü–∞–ø–∫–∞ —Å —Ñ–æ—Ç–æ:", value="C:/test/m3")

if st.button("üîç –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–æ–≤–∞—Ç—å –ª–∏—Ü–∞"):
    path = Path(photos_dir)
    if not path.exists():
        st.error("–ü—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    else:
        with st.spinner("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è..."):
            plan = build_plan(path)

        cluster_map = plan.get("clusters", {})
        unreadable = plan.get("unreadable", [])
        result_plan = plan.get("plan", [])

        with open("plan.json", "w", encoding="utf-8") as f:
            json.dump(plan, f, ensure_ascii=False, indent=2)

        st.success(f"‚úÖ –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤: {len(cluster_map)}.")

        if unreadable:
            st.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å {len(unreadable)} —Ñ–∞–π–ª(–æ–≤).")
            st.code("\n".join(unreadable[:50]), language="text")

        st.write("–ü—Ä–∏–º–µ—Ä—ã –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏:")
        for row in result_plan[:5]:
            st.json(row)
